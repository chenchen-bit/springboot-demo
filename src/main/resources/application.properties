# 服务器的HTTP端口，默认为8080
server.port=8088
#
# ---
#
# 数据库地址
spring.datasource.url=jdbc:mysql://localhost:3306/springboot_demo?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
# 数据库用户名
spring.datasource.username=root
# 数据库密码
spring.datasource.password=root
# 数据库驱动
# MySQL5用的驱动url是com.mysql.jdbc.Driver，MySQL6以后用的是com.mysql.cj.jdbc.Driver
# 附:使用com.mysql.cj.jdbc.Driver如果出现时区问题（Caused by: java.sql.SQLException: The server time zone value 'XXXXXXXXX' is unrecognized...）
# 在数据库地址url后面加上serverTimezone=GMT%2B8（表示中国的时区）或者serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 以上配置都在org.springframework.boot.autoconfigure.jdbc包中。
# mybatis-spring-boot-starter依赖了spring-boot-starter-jdbc。
# 自动配置时会将数据库连接相关信息注入到mybatis中
#
# ---
#
# 指定xml文件位置
# classpath对应resources，*.xml表示配置mapper下所有xml文件
mybatis.mapper-locations=classpath:mapper/*.xml
# 搜索指定包别名
mybatis.type-aliases-package=com.example.demo.domain
#
# ---
#
# thymeleaf 配置
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
# 缓存设置为false, 这样修改之后马上生效，便于调试
spring.thymeleaf.cache=false
#
# ---
#
# PageHelper分页插件
pagehelper.helperDialect=mysql
#
# ---
#
# SpringBoot 会自动读取 logback-spring.xml，使用 logback-spring.xml 的时候要把这里的配置去掉，避免冲突
# 日志级别 TRACE < DEBUG < INFO < WARN < ERROR < FATAL
#logging.level.root=INFO
# 打印sql语句,其中com.example.demo.mapper为mapper接口所在位置，debug为日志级别(debug可更改为其它级别!)
#logging.level.com.example.demo.mapper=debug
# ** name 和 path 是不能同时配置的，如果同时配置path不会生效。
# 日志文件名称
#logging.file.name=log.log
# 日志文件路径
#logging.file.path=/
